{"ast":null,"code":"var _jsxFileName = \"/Users/jacquelineturof/Next/office-suite-app/components/AuthForm.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport Button from './UI/Button';\nimport Input from './UI/Input';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classes from './AuthForm.module.css';\n\nconst AuthProviders = ({\n  formType\n}) => __jsx(\"div\", {\n  className: classes.AuthProvidersContainer,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }\n}, __jsx(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }\n}, formType === 'register' ? 'Get Started' : 'Login'), __jsx(\"div\", {\n  className: classes.AuthProviders,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }\n}, __jsx(\"div\", {\n  className: [classes.IconContainer, classes.FacebookBlue, \"Center\"].join(' '),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 13\n  }\n}, __jsx(FontAwesomeIcon, {\n  icon: ['fab', 'facebook'],\n  className: classes.Icon,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 17\n  }\n})), __jsx(\"div\", {\n  className: [classes.IconContainer, classes.GoogleRed, \"Center\"].join(' '),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 13\n  }\n}, __jsx(FontAwesomeIcon, {\n  icon: ['fab', 'google'],\n  className: classes.Icon,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 17\n  }\n}))));\n\nconst Banner = ({\n  formType\n}) => __jsx(\"div\", {\n  className: classes.Banner,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }\n}, __jsx(\"h1\", {\n  className: classes.AppName,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }\n}, __jsx(\"span\", {\n  className: \"Bold Uppercase\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 45\n  }\n}, \"super\"), \"cubicle\"), __jsx(\"p\", {\n  className: classes.Tag,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }\n}, \"Hempen halter wench hornswaggle hail-shot nipper boom yo-ho-ho topmast gangplank parley. Barkadeer belay salmagundi provost mizzen pillage Shiver me timbers black jack scuppers fire in the hole.\"), __jsx(AuthProviders, {\n  formType: formType,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }\n}));\n\nconst FormControl = ({\n  formType,\n  setFormType\n}) => __jsx(\"div\", {\n  className: classes.FormControlContainer,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }\n}, __jsx(Button, {\n  type: formType === 'login' ? \"Active\" : \"Simple\",\n  clicked: () => setFormType('login'),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }\n}, \"Login\"), __jsx(Button, {\n  type: formType === 'register' ? \"Active\" : \"Simple\",\n  clicked: () => setFormType('register'),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }\n}, \"Register\"));\n\nconst Form = ({\n  formType,\n  setFormType\n}) => {\n  /*\n      Form Inputs\n  */\n  const {\n    0: username,\n    1: setUsername\n  } = useState('');\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const {\n    0: confirmPassword,\n    1: setConfirmPassword\n  } = useState('');\n  /*\n      Form Inputs Config\n  */\n\n  const USERNAME_CONFIG = {\n    elementType: 'input',\n    elementConfig: {\n      type: 'text',\n      placeholder: 'Username'\n    },\n    iconConfig: {\n      name: 'signature',\n      package: 'fal'\n    },\n    value: username,\n    changed: e => setUsername(e.target.value)\n  };\n  const EMAIL_CONFIG = {\n    elementType: 'input',\n    elementConfig: {\n      type: 'text',\n      placeholder: 'Your Email'\n    },\n    iconConfig: {\n      name: 'at',\n      package: 'fal'\n    },\n    value: email,\n    changed: e => setEmail(e.target.value)\n  };\n  const PASSWORD_CONFIG = {\n    elementType: 'input',\n    elementConfig: {\n      type: 'password',\n      placeholder: 'Password'\n    },\n    iconConfig: {\n      name: 'lock-alt',\n      package: 'fal'\n    },\n    value: password,\n    changed: e => setPassword(e.target.value)\n  };\n  const CONFIRM_PASSWORD_CONFIG = {\n    elementType: 'input',\n    elementConfig: {\n      type: 'password',\n      placeholder: 'Confirm Password'\n    },\n    iconConfig: {\n      name: 'check',\n      package: 'fal'\n    },\n    value: confirmPassword,\n    changed: e => setConfirmPassword(e.target.value)\n  }; // Form Heading\n\n  let heading;\n  if (formType === 'login') heading = 'Login';else if (formType === 'register') heading = 'Register';else heading = 'Send Password Reset Email';\n  return __jsx(\"form\", {\n    className: classes.Form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, __jsx(FormControl, {\n    formType: formType,\n    setFormType: setFormType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, heading), __jsx(\"div\", {\n    className: classes.InputsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, formType === 'forgotPassword' ? null : __jsx(Input, _extends({}, USERNAME_CONFIG, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 27\n    }\n  })), formType === 'login' ? null : __jsx(Input, _extends({}, EMAIL_CONFIG, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 27\n    }\n  })), formType === 'forgotPassword' ? null : __jsx(Input, _extends({}, PASSWORD_CONFIG, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 27\n    }\n  })), formType === 'register' ? __jsx(Input, _extends({}, CONFIRM_PASSWORD_CONFIG, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 27\n    }\n  })) : null));\n};\n\nconst AuthForm = () => {\n  // formTypes -> 'login', 'register', 'forgotPassword\n  const {\n    0: formType,\n    1: setFormType\n  } = useState('login');\n  return __jsx(\"div\", {\n    className: classes.AuthFormContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, __jsx(Banner, {\n    formType: formType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }), __jsx(Form, {\n    formType: formType,\n    setFormType: setFormType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default AuthForm;","map":{"version":3,"sources":["/Users/jacquelineturof/Next/office-suite-app/components/AuthForm.js"],"names":["React","useState","Button","Input","FontAwesomeIcon","classes","AuthProviders","formType","AuthProvidersContainer","IconContainer","FacebookBlue","join","Icon","GoogleRed","Banner","AppName","Tag","FormControl","setFormType","FormControlContainer","Form","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","USERNAME_CONFIG","elementType","elementConfig","type","placeholder","iconConfig","name","package","value","changed","e","target","EMAIL_CONFIG","PASSWORD_CONFIG","CONFIRM_PASSWORD_CONFIG","heading","InputsContainer","AuthForm","AuthFormContainer"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nimport Button from './UI/Button'\nimport Input from './UI/Input'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport classes from './AuthForm.module.css'\n\nconst AuthProviders = ({ formType }) => (\n    <div className = { classes.AuthProvidersContainer }>\n        <h1>{ formType === 'register' ? 'Get Started' : 'Login' }</h1>\n        <div className = { classes.AuthProviders }>\n            <div className = { [ classes.IconContainer, classes.FacebookBlue, \"Center\" ].join(' ') }>\n                <FontAwesomeIcon \n                    icon = { [ 'fab', 'facebook' ] } \n                    className = { classes.Icon } />\n            </div>\n            <div className = { [ classes.IconContainer, classes.GoogleRed, \"Center\" ].join(' ') }>\n                <FontAwesomeIcon \n                    icon = { [ 'fab', 'google' ] } \n                    className = { classes.Icon } />\n            </div>\n        </div>\n    </div>\n)\n\nconst Banner = ({ formType }) => (\n    <div className = { classes.Banner }>\n        <h1 className = { classes.AppName }><span className = \"Bold Uppercase\">super</span>cubicle</h1>\n        <p className = { classes.Tag }>Hempen halter wench hornswaggle hail-shot nipper boom yo-ho-ho topmast gangplank parley. Barkadeer belay salmagundi provost mizzen pillage Shiver me timbers black jack scuppers fire in the hole.</p>\n        <AuthProviders formType = { formType } />\n    </div>\n)\n\nconst FormControl = ({ formType, setFormType }) => (\n    <div className = { classes.FormControlContainer }>\n        <Button \n            type = { formType === 'login' ? \"Active\" : \"Simple\" }\n            clicked = { () => setFormType('login') }>\n            Login\n        </Button>\n        <Button \n            type = { formType === 'register' ? \"Active\" : \"Simple\" }\n            clicked = { () => setFormType('register') }>\n            Register\n        </Button>\n    </div>\n)\n\nconst Form = ({ formType, setFormType }) => {\n    /*\n        Form Inputs\n    */\n    const [ username, setUsername ] = useState('')\n    const [ email, setEmail ] = useState('')\n    const [ password, setPassword ] = useState('')\n    const [ confirmPassword, setConfirmPassword ] = useState('')\n\n    /*\n        Form Inputs Config\n    */\n    const USERNAME_CONFIG = {\n        elementType: 'input',\n        elementConfig: {\n            type: 'text',\n            placeholder: 'Username'\n        },\n        iconConfig: {\n            name: 'signature',\n            package: 'fal'\n        },\n        value: username,\n        changed: e => setUsername(e.target.value)\n    }\n\n    const EMAIL_CONFIG = {\n        elementType: 'input',\n        elementConfig: {\n            type: 'text',\n            placeholder: 'Your Email'\n        },\n        iconConfig: {\n            name: 'at',\n            package: 'fal'\n        },\n        value: email,\n        changed: e => setEmail(e.target.value)\n    }\n\n    const PASSWORD_CONFIG = {\n        elementType: 'input',\n        elementConfig: {\n            type: 'password',\n            placeholder: 'Password'\n        },\n        iconConfig: {\n            name: 'lock-alt',\n            package: 'fal'\n        },\n        value: password,\n        changed: e => setPassword(e.target.value)\n    }\n\n    const CONFIRM_PASSWORD_CONFIG = {\n        elementType: 'input',\n        elementConfig: {\n            type: 'password',\n            placeholder: 'Confirm Password'\n        },\n        iconConfig: {\n            name: 'check',\n            package: 'fal'\n        },\n        value: confirmPassword,\n        changed: e => setConfirmPassword(e.target.value)\n    }\n    \n    // Form Heading\n    let heading\n\n    if (formType === 'login') heading = 'Login'\n    else if (formType === 'register') heading = 'Register'\n    else heading = 'Send Password Reset Email'\n\n    return (\n        <form className = { classes.Form }>\n            <FormControl formType = { formType } setFormType = { setFormType } />\n            <h1>{ heading }</h1>\n            <div className = { classes.InputsContainer }>\n                { \n                    formType === 'forgotPassword' \n                        ? null \n                        : <Input { ...USERNAME_CONFIG } /> \n                }\n                {\n                    formType === 'login'\n                        ? null\n                        : <Input { ...EMAIL_CONFIG } />\n                }\n                {\n                    formType === 'forgotPassword'\n                        ? null\n                        : <Input  { ...PASSWORD_CONFIG } />\n                }\n\n                {\n                    formType === 'register'\n                        ? <Input { ...CONFIRM_PASSWORD_CONFIG } />\n                        : null\n                }\n            </div>\n        </form>\n    )\n}\n\nconst AuthForm = () => {\n    // formTypes -> 'login', 'register', 'forgotPassword\n    const [ formType, setFormType ] = useState('login')\n\n    return (\n        <div className = { classes.AuthFormContainer }>\n            <Banner formType = { formType } />\n            <Form formType = { formType } setFormType = { setFormType } />\n        </div>\n    )\n}\n\nexport default AuthForm"]},"metadata":{},"sourceType":"module"}